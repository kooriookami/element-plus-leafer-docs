import{_ as e,c as a,o as t,a2 as r}from"./chunks/framework.DUrWDx4n.js";const u=JSON.parse('{"title":"简介","description":"","frontmatter":{},"headers":[],"relativePath":"zh-CN/guide/index.md","filePath":"zh-CN/guide/index.md"}'),n={name:"zh-CN/guide/index.md"},s=r('<h1 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h1><p>Element Plus Leafer 结合了 <a href="https://element-plus.org/" target="_blank" rel="noreferrer">Element Plus</a> 与 <a href="https://leaferjs.com/ui/" target="_blank" rel="noreferrer">Leafer UI</a> 两个库。可以在 Canvas 上轻松绘制一些常用组件。</p><h2 id="使用场景" tabindex="-1">使用场景 <a class="header-anchor" href="#使用场景" aria-label="Permalink to &quot;使用场景&quot;">​</a></h2><p>目前主流的前端框架大多是基于 DOM 的，想要在 Canvas 中使用组件选择不是很多。Leafer UI 给我们带来了一个很好的解决方案，可以方便地在 Canvas 中绘制元素。</p><p>于是，我将 Element Plus 与 Leafer UI 结合，可以在 Canvas 上绘制 Element Plus 样式的组件。</p>',5),o=[s];function l(i,_,d,c,h,p){return t(),a("div",null,o)}const m=e(n,[["render",l]]);export{u as __pageData,m as default};
